
dataflow.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <get_cycle_count>:
   0:	0f 31                	rdtsc  
   2:	48 8d 4c 24 f8       	lea    -0x8(%rsp),%rcx
   7:	89 01                	mov    %eax,(%rcx)
   9:	89 51 04             	mov    %edx,0x4(%rcx)
   c:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
  11:	c3                   	retq   

0000000000000012 <op_single>:
  12:	89 f8                	mov    %edi,%eax
  14:	f7 d0                	not    %eax
  16:	c3                   	retq   

0000000000000017 <op_regs>:
  17:	8d 04 3e             	lea    (%rsi,%rdi,1),%eax
  1a:	c3                   	retq   

000000000000001b <op_regs_long>:
  1b:	48 8d 04 3e          	lea    (%rsi,%rdi,1),%rax
  1f:	c3                   	retq   

0000000000000020 <op_mem>:
  20:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 26 <op_mem+0x6>
  26:	03 05 00 00 00 00    	add    0x0(%rip),%eax        # 2c <op_mem+0xc>
  2c:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 32 <op_mem+0x12>
  32:	c3                   	retq   

0000000000000033 <compare>:
  33:	48 83 ec 28          	sub    $0x28,%rsp
  37:	c7 44 24 1c ff ff ff 	movl   $0x7fffffff,0x1c(%rsp)
  3e:	7f 
  3f:	c7 44 24 18 ff ff ff 	movl   $0xffffffff,0x18(%rsp)
  46:	ff 
  47:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
  4b:	8b 44 24 18          	mov    0x18(%rsp),%eax
  4f:	44 8b 4c 24 18       	mov    0x18(%rsp),%r9d
  54:	44 8b 44 24 1c       	mov    0x1c(%rsp),%r8d
  59:	8b 4c 24 1c          	mov    0x1c(%rsp),%ecx
  5d:	44 8b 54 24 18       	mov    0x18(%rsp),%r10d
  62:	8b 54 24 18          	mov    0x18(%rsp),%edx
  66:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
  6a:	44 29 d1             	sub    %r10d,%ecx
  6d:	39 c7                	cmp    %eax,%edi
  6f:	0f 9f c0             	setg   %al
  72:	0f b6 c0             	movzbl %al,%eax
  75:	89 04 24             	mov    %eax,(%rsp)
  78:	bf 00 00 00 00       	mov    $0x0,%edi
  7d:	b8 00 00 00 00       	mov    $0x0,%eax
  82:	e8 00 00 00 00       	callq  87 <compare+0x54>
  87:	48 83 c4 28          	add    $0x28,%rsp
  8b:	c3                   	retq   

000000000000008c <op_for_loop>:
  8c:	41 54                	push   %r12
  8e:	55                   	push   %rbp
  8f:	53                   	push   %rbx
  90:	48 89 fd             	mov    %rdi,%rbp
  93:	89 f3                	mov    %esi,%ebx
  95:	b8 00 00 00 00       	mov    $0x0,%eax
  9a:	e8 00 00 00 00       	callq  9f <op_for_loop+0x13>
  9f:	49 89 c4             	mov    %rax,%r12
  a2:	85 db                	test   %ebx,%ebx
  a4:	7f 07                	jg     ad <op_for_loop+0x21>
  a6:	bb 01 00 00 00       	mov    $0x1,%ebx
  ab:	eb 22                	jmp    cf <op_for_loop+0x43>
  ad:	83 eb 01             	sub    $0x1,%ebx
  b0:	48 8d 14 9d 04 00 00 	lea    0x4(,%rbx,4),%rdx
  b7:	00 
  b8:	b8 00 00 00 00       	mov    $0x0,%eax
  bd:	bb 01 00 00 00       	mov    $0x1,%ebx
  c2:	03 5c 05 00          	add    0x0(%rbp,%rax,1),%ebx
  c6:	48 83 c0 04          	add    $0x4,%rax
  ca:	48 39 d0             	cmp    %rdx,%rax
  cd:	75 f3                	jne    c2 <op_for_loop+0x36>
  cf:	b8 00 00 00 00       	mov    $0x0,%eax
  d4:	e8 00 00 00 00       	callq  d9 <op_for_loop+0x4d>
  d9:	48 89 c6             	mov    %rax,%rsi
  dc:	4c 29 e6             	sub    %r12,%rsi
  df:	bf 00 00 00 00       	mov    $0x0,%edi
  e4:	b8 00 00 00 00       	mov    $0x0,%eax
  e9:	e8 00 00 00 00       	callq  ee <op_for_loop+0x62>
  ee:	89 d8                	mov    %ebx,%eax
  f0:	5b                   	pop    %rbx
  f1:	5d                   	pop    %rbp
  f2:	41 5c                	pop    %r12
  f4:	c3                   	retq   

00000000000000f5 <timing_overhead>:
  f5:	53                   	push   %rbx
  f6:	b8 00 00 00 00       	mov    $0x0,%eax
  fb:	e8 00 00 00 00       	callq  100 <timing_overhead+0xb>
 100:	48 89 c3             	mov    %rax,%rbx
 103:	b8 00 00 00 00       	mov    $0x0,%eax
 108:	e8 00 00 00 00       	callq  10d <timing_overhead+0x18>
 10d:	48 89 c6             	mov    %rax,%rsi
 110:	48 29 de             	sub    %rbx,%rsi
 113:	bf 00 00 00 00       	mov    $0x0,%edi
 118:	b8 00 00 00 00       	mov    $0x0,%eax
 11d:	e8 00 00 00 00       	callq  122 <timing_overhead+0x2d>
 122:	5b                   	pop    %rbx
 123:	c3                   	retq   

0000000000000124 <main>:
 124:	48 83 ec 08          	sub    $0x8,%rsp
 128:	b8 00 00 00 00       	mov    $0x0,%eax
 12d:	e8 00 00 00 00       	callq  132 <main+0xe>
 132:	be 00 04 00 00       	mov    $0x400,%esi
 137:	bf 00 00 00 00       	mov    $0x0,%edi
 13c:	e8 00 00 00 00       	callq  141 <main+0x1d>
 141:	b8 00 00 00 00       	mov    $0x0,%eax
 146:	e8 00 00 00 00       	callq  14b <main+0x27>
 14b:	b8 00 00 00 00       	mov    $0x0,%eax
 150:	e8 00 00 00 00       	callq  155 <main+0x31>
 155:	48 83 c4 08          	add    $0x8,%rsp
 159:	c3                   	retq   
